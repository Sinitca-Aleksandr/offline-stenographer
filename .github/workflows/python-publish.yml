# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build-whl:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build release distributions
        run: |
          pip3 install poetry
          poetry install --with dev
          poetry build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  # release-build-exe:
  #   runs-on: windows-latest

  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.x"
  #     - name: Build release distributions
  #       run: |
  #         # NOTE: put your own distribution build steps here.
  #         python -m pip install pyinstaller
  #         python -m pip install .
  #         TAG=${{ github.ref_name }}
  #         pyinstaller --onefile --add-data="./bn_modeller/resources/icon.ico;." --icon=./bn_modeller/resources/icon.ico --windowed --name=bn_modeller-${TAG#release/}.exe ./bn_modeller/app.py

  #     - name: Upload distributions
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: release-exe-dists
  #         path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build-whl
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
      url: https://pypi.org/p/bn_modeller

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/

  add-to-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - release-build-whl
      # - release-build-exe
    steps:
      - name: Retrieve release whl distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/
      # - name: Retrieve release exe distributions
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: release-exe-dists
      #     path: dist/
      - name: Upload assets to a Release
        uses: AButler/upload-release-assets@v3.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          files: "dist/*"
